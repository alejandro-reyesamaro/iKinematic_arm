<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IK_PF_NET</name>
    </assembly>
    <members>
        <member name="T:IK_PF_NET.IK_PF_NETclass">
            <summary>
            The IK_PF_NETclass class provides a CLS compliant interface to the M-functions
            contained in the files:
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\weightFunc
            tion.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\angulo.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\createChai
            n.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\createPart
            icle.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\chain2CCDq
            uaternions.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\chain2imag
            e.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\chain2posi
            tions.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\chainCCDQu
            TemSamplig.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\chainEndEf
            fectorPosition.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\chainQuate
            rnionUniformSampling.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\chainQuTEM
            Sampling.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\dentro.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\euclidianD
            istance.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\evalua_rec
            ta.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\imageDista
            nce.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\mas.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\obstaculo_
            crecido.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\PF.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\pik.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\point2quat
            ernion.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\pointDista
            nce.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\positions2
            chain.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\PrtFltr_Mk
            wskSum.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\quaternion
            .m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\quaternion
            2point.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\quaternion
            Conjugate.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\quaternion
            Distance.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\quaternion
            ExponentialMap.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\quaternion
            InnerProduct.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\quaternion
            LogarithmicMap.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\quaternion
            Norm.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\quaternion
            Normalize.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\quaternion
            Product.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\quaternion
            QuTEMSampling.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\quaternion
            Rotation.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\quaternion
            UniformSampling.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\remostreja
            r.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\rotation2q
            uaternion.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\S_Touch.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\setGaussia
            nParameters.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\slerp.m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\testQuTEM.
            m
            <newpara></newpara>
            C:\Documents and Settings\Administrador\Escritorio\My
            Work\MATH\ParticleFiltering\IK_ParticleFiltering\IK_ParticleFiltering_NET\vectors2qu
            aternion.m
            <newpara></newpara>
            deployprint.m
            <newpara></newpara>
            printdlg.m
            </summary>
            <remarks>
            @Version 0.0
            </remarks>
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.#cctor">
            <summary internal= "true">
            The static constructor instantiates and initializes the MATLAB Component
            Runtime instance.
            </summary>
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.#ctor">
            <summary>
            Constructs a new instance of the IK_PF_NETclass class.
            </summary>
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.Finalize">
            <summary internal= "true">
            Class destructor called by the CLR garbage collector.
            </summary>
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.Dispose">
            <summary>
            Frees the native resources associated with this object
            </summary>
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.Dispose(System.Boolean)">
            <summary internal= "true">
            Internal dispose function
            </summary>
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.weightFunction">
             <summary>
             Provides a single output, 0-input interface to the weightFunction M-function.
             </summary>
             <remarks>
             M-Documentation:
             euclideanDistance
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.weightFunction(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the weightFunction M-function.
             </summary>
             <remarks>
             M-Documentation:
             euclideanDistance
             </remarks>
             <param name="chain">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.weightFunction(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input interface to the weightFunction M-function.
             </summary>
             <remarks>
             M-Documentation:
             euclideanDistance
             </remarks>
             <param name="chain">Input argument #1</param>
             <param name="goal">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.weightFunction(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 3-input interface to the weightFunction M-function.
             </summary>
             <remarks>
             M-Documentation:
             euclideanDistance
             </remarks>
             <param name="chain">Input argument #1</param>
             <param name="goal">Input argument #2</param>
             <param name="S">Input argument #3</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.weightFunction(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the weightFunction M-function.
             </summary>
             <remarks>
             M-Documentation:
             euclideanDistance
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.weightFunction(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the weightFunction M-function.
             </summary>
             <remarks>
             M-Documentation:
             euclideanDistance
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="chain">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.weightFunction(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input interface to the weightFunction M-function.
             </summary>
             <remarks>
             M-Documentation:
             euclideanDistance
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="chain">Input argument #1</param>
             <param name="goal">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.weightFunction(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 3-input interface to the weightFunction M-function.
             </summary>
             <remarks>
             M-Documentation:
             euclideanDistance
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="chain">Input argument #1</param>
             <param name="goal">Input argument #2</param>
             <param name="S">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.weightFunction(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the weightFunction function in which the input and
             output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             euclideanDistance
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.angulo">
             <summary>
             Provides a single output, 0-input interface to the angulo M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.angulo(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the angulo M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="p1">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.angulo(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input interface to the angulo M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="p1">Input argument #1</param>
             <param name="p2">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.angulo(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 3-input interface to the angulo M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="p1">Input argument #1</param>
             <param name="p2">Input argument #2</param>
             <param name="antan">Input argument #3</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.angulo(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the angulo M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.angulo(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the angulo M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="p1">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.angulo(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input interface to the angulo M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="p1">Input argument #1</param>
             <param name="p2">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.angulo(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 3-input interface to the angulo M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="p1">Input argument #1</param>
             <param name="p2">Input argument #2</param>
             <param name="antan">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.angulo(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the angulo function in which the input and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.createChain">
             <summary>
             Provides a single output, 0-input interface to the createChain M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.createChain(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the createChain M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="vectores_canonicos">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.createChain(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the createChain M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.createChain(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the createChain M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="vectores_canonicos">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.createChain(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the createChain function in which the input and
             output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.createParticle">
             <summary>
             Provides a single output, 0-input interface to the createParticle M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.createParticle(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the createParticle M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="chain">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.createParticle(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input interface to the createParticle M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="chain">Input argument #1</param>
             <param name="samples">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.createParticle(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 3-input interface to the createParticle M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="chain">Input argument #1</param>
             <param name="samples">Input argument #2</param>
             <param name="pg">Input argument #3</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.createParticle(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 4-input interface to the createParticle M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="chain">Input argument #1</param>
             <param name="samples">Input argument #2</param>
             <param name="pg">Input argument #3</param>
             <param name="equal">Input argument #4</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.createParticle(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the createParticle M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.createParticle(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the createParticle M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="chain">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.createParticle(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input interface to the createParticle M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="chain">Input argument #1</param>
             <param name="samples">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.createParticle(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 3-input interface to the createParticle M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="chain">Input argument #1</param>
             <param name="samples">Input argument #2</param>
             <param name="pg">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.createParticle(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 4-input interface to the createParticle M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="chain">Input argument #1</param>
             <param name="samples">Input argument #2</param>
             <param name="pg">Input argument #3</param>
             <param name="equal">Input argument #4</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.createParticle(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the createParticle function in which the input and
             output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chain2CCDquaternions">
             <summary>
             Provides a single output, 0-input interface to the chain2CCDquaternions
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             chain copy
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chain2CCDquaternions(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the chain2CCDquaternions
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             chain copy
             </remarks>
             <param name="chain">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chain2CCDquaternions(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input interface to the chain2CCDquaternions
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             chain copy
             </remarks>
             <param name="chain">Input argument #1</param>
             <param name="goal">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chain2CCDquaternions(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the chain2CCDquaternions M-function.
             </summary>
             <remarks>
             M-Documentation:
             chain copy
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chain2CCDquaternions(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the chain2CCDquaternions M-function.
             </summary>
             <remarks>
             M-Documentation:
             chain copy
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="chain">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chain2CCDquaternions(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input interface to the chain2CCDquaternions M-function.
             </summary>
             <remarks>
             M-Documentation:
             chain copy
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="chain">Input argument #1</param>
             <param name="goal">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chain2CCDquaternions(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the chain2CCDquaternions function in which the input
             and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             chain copy
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chain2image">
             <summary>
             Provides a single output, 0-input interface to the chain2image M-function.
             </summary>
             <remarks>
             M-Documentation:
             joints positions of the chain
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chain2image(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the chain2image M-function.
             </summary>
             <remarks>
             M-Documentation:
             joints positions of the chain
             </remarks>
             <param name="chain">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chain2image(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input interface to the chain2image M-function.
             </summary>
             <remarks>
             M-Documentation:
             joints positions of the chain
             </remarks>
             <param name="chain">Input argument #1</param>
             <param name="penSize">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chain2image(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 3-input interface to the chain2image M-function.
             </summary>
             <remarks>
             M-Documentation:
             joints positions of the chain
             </remarks>
             <param name="chain">Input argument #1</param>
             <param name="penSize">Input argument #2</param>
             <param name="image_in1">Input argument #3</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chain2image(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the chain2image M-function.
             </summary>
             <remarks>
             M-Documentation:
             joints positions of the chain
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chain2image(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the chain2image M-function.
             </summary>
             <remarks>
             M-Documentation:
             joints positions of the chain
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="chain">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chain2image(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input interface to the chain2image M-function.
             </summary>
             <remarks>
             M-Documentation:
             joints positions of the chain
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="chain">Input argument #1</param>
             <param name="penSize">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chain2image(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 3-input interface to the chain2image M-function.
             </summary>
             <remarks>
             M-Documentation:
             joints positions of the chain
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="chain">Input argument #1</param>
             <param name="penSize">Input argument #2</param>
             <param name="image_in1">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chain2image(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the chain2image function in which the input and
             output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             joints positions of the chain
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chain2positions">
             <summary>
             Provides a single output, 0-input interface to the chain2positions M-function.
             </summary>
             <remarks>
             M-Documentation:
             TODO: Valid for matrix</remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chain2positions(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the chain2positions M-function.
             </summary>
             <remarks>
             M-Documentation:
             TODO: Valid for matrix</remarks>
             <param name="chain">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chain2positions(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the chain2positions M-function.
             </summary>
             <remarks>
             M-Documentation:
             TODO: Valid for matrix</remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chain2positions(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the chain2positions M-function.
             </summary>
             <remarks>
             M-Documentation:
             TODO: Valid for matrix</remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="chain">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chain2positions(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the chain2positions function in which the input and
             output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             TODO: Valid for matrix</remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chainCCDQuTemSamplig">
             <summary>
             Provides a single output, 0-input interface to the chainCCDQuTemSamplig
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             compute joints quaternion rotation for CCD. From quaternion of joint to vector
             joint
             position-->goal
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chainCCDQuTemSamplig(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the chainCCDQuTemSamplig
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             compute joints quaternion rotation for CCD. From quaternion of joint to vector
             joint
             position-->goal
             </remarks>
             <param name="goal">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chainCCDQuTemSamplig(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input interface to the chainCCDQuTemSamplig
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             compute joints quaternion rotation for CCD. From quaternion of joint to vector
             joint
             position-->goal
             </remarks>
             <param name="goal">Input argument #1</param>
             <param name="g">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chainCCDQuTemSamplig(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 3-input interface to the chainCCDQuTemSamplig
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             compute joints quaternion rotation for CCD. From quaternion of joint to vector
             joint
             position-->goal
             </remarks>
             <param name="goal">Input argument #1</param>
             <param name="g">Input argument #2</param>
             <param name="chain">Input argument #3</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chainCCDQuTemSamplig(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 4-input interface to the chainCCDQuTemSamplig
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             compute joints quaternion rotation for CCD. From quaternion of joint to vector
             joint
             position-->goal
             </remarks>
             <param name="goal">Input argument #1</param>
             <param name="g">Input argument #2</param>
             <param name="chain">Input argument #3</param>
             <param name="f">Input argument #4</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chainCCDQuTemSamplig(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 5-input interface to the chainCCDQuTemSamplig
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             compute joints quaternion rotation for CCD. From quaternion of joint to vector
             joint
             position-->goal
             </remarks>
             <param name="goal">Input argument #1</param>
             <param name="g">Input argument #2</param>
             <param name="chain">Input argument #3</param>
             <param name="f">Input argument #4</param>
             <param name="epsilon">Input argument #5</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chainCCDQuTemSamplig(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the chainCCDQuTemSamplig M-function.
             </summary>
             <remarks>
             M-Documentation:
             compute joints quaternion rotation for CCD. From quaternion of joint to vector
             joint
             position-->goal
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chainCCDQuTemSamplig(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the chainCCDQuTemSamplig M-function.
             </summary>
             <remarks>
             M-Documentation:
             compute joints quaternion rotation for CCD. From quaternion of joint to vector
             joint
             position-->goal
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="goal">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chainCCDQuTemSamplig(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input interface to the chainCCDQuTemSamplig M-function.
             </summary>
             <remarks>
             M-Documentation:
             compute joints quaternion rotation for CCD. From quaternion of joint to vector
             joint
             position-->goal
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="goal">Input argument #1</param>
             <param name="g">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chainCCDQuTemSamplig(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 3-input interface to the chainCCDQuTemSamplig M-function.
             </summary>
             <remarks>
             M-Documentation:
             compute joints quaternion rotation for CCD. From quaternion of joint to vector
             joint
             position-->goal
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="goal">Input argument #1</param>
             <param name="g">Input argument #2</param>
             <param name="chain">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chainCCDQuTemSamplig(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 4-input interface to the chainCCDQuTemSamplig M-function.
             </summary>
             <remarks>
             M-Documentation:
             compute joints quaternion rotation for CCD. From quaternion of joint to vector
             joint
             position-->goal
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="goal">Input argument #1</param>
             <param name="g">Input argument #2</param>
             <param name="chain">Input argument #3</param>
             <param name="f">Input argument #4</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chainCCDQuTemSamplig(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 5-input interface to the chainCCDQuTemSamplig M-function.
             </summary>
             <remarks>
             M-Documentation:
             compute joints quaternion rotation for CCD. From quaternion of joint to vector
             joint
             position-->goal
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="goal">Input argument #1</param>
             <param name="g">Input argument #2</param>
             <param name="chain">Input argument #3</param>
             <param name="f">Input argument #4</param>
             <param name="epsilon">Input argument #5</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chainCCDQuTemSamplig(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the chainCCDQuTemSamplig function in which the input
             and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             compute joints quaternion rotation for CCD. From quaternion of joint to vector
             joint
             position-->goal
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chainEndEffectorPosition">
             <summary>
             Provides a single output, 0-input interface to the chainEndEffectorPosition
             M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chainEndEffectorPosition(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the chainEndEffectorPosition
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="chain">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chainEndEffectorPosition(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the chainEndEffectorPosition
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chainEndEffectorPosition(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the chainEndEffectorPosition
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="chain">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chainEndEffectorPosition(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the chainEndEffectorPosition function in which the
             input and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chainQuaternionUniformSampling">
             <summary>
             Provides a single output, 0-input interface to the
             chainQuaternionUniformSampling M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chainQuaternionUniformSampling(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the
             chainQuaternionUniformSampling M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="samples">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chainQuaternionUniformSampling(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input interface to the
             chainQuaternionUniformSampling M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="samples">Input argument #1</param>
             <param name="chain">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chainQuaternionUniformSampling(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the chainQuaternionUniformSampling
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chainQuaternionUniformSampling(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the chainQuaternionUniformSampling
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="samples">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chainQuaternionUniformSampling(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input interface to the chainQuaternionUniformSampling
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="samples">Input argument #1</param>
             <param name="chain">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chainQuaternionUniformSampling(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the chainQuaternionUniformSampling function in which
             the input and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chainQuTEMSampling">
             <summary>
             Provides a single output, 0-input interface to the chainQuTEMSampling
             M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chainQuTEMSampling(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the chainQuTEMSampling
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="g">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chainQuTEMSampling(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input interface to the chainQuTEMSampling
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="g">Input argument #1</param>
             <param name="chain">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chainQuTEMSampling(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the chainQuTEMSampling M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chainQuTEMSampling(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the chainQuTEMSampling M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="g">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chainQuTEMSampling(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input interface to the chainQuTEMSampling M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="g">Input argument #1</param>
             <param name="chain">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.chainQuTEMSampling(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the chainQuTEMSampling function in which the input
             and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.dentro">
             <summary>
             Provides a single output, 0-input interface to the dentro M-function.
             </summary>
             <remarks>
             M-Documentation:
             Esta funcion nos dir'a si un punto est'a dentro de un poligono (convexo)
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.dentro(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the dentro M-function.
             </summary>
             <remarks>
             M-Documentation:
             Esta funcion nos dir'a si un punto est'a dentro de un poligono (convexo)
             </remarks>
             <param name="P">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.dentro(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input interface to the dentro M-function.
             </summary>
             <remarks>
             M-Documentation:
             Esta funcion nos dir'a si un punto est'a dentro de un poligono (convexo)
             </remarks>
             <param name="P">Input argument #1</param>
             <param name="p">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.dentro(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the dentro M-function.
             </summary>
             <remarks>
             M-Documentation:
             Esta funcion nos dir'a si un punto est'a dentro de un poligono (convexo)
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.dentro(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the dentro M-function.
             </summary>
             <remarks>
             M-Documentation:
             Esta funcion nos dir'a si un punto est'a dentro de un poligono (convexo)
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="P">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.dentro(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input interface to the dentro M-function.
             </summary>
             <remarks>
             M-Documentation:
             Esta funcion nos dir'a si un punto est'a dentro de un poligono (convexo)
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="P">Input argument #1</param>
             <param name="p">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.dentro(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the dentro function in which the input and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             Esta funcion nos dir'a si un punto est'a dentro de un poligono (convexo)
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.euclidianDistance">
             <summary>
             Provides a single output, 0-input interface to the euclidianDistance
             M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.euclidianDistance(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the euclidianDistance
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="p1">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.euclidianDistance(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input interface to the euclidianDistance
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="p1">Input argument #1</param>
             <param name="p2">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.euclidianDistance(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the euclidianDistance M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.euclidianDistance(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the euclidianDistance M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="p1">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.euclidianDistance(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input interface to the euclidianDistance M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="p1">Input argument #1</param>
             <param name="p2">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.euclidianDistance(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the euclidianDistance function in which the input and
             output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.evalua_recta">
             <summary>
             Provides a single output, 0-input interface to the evalua_recta M-function.
             </summary>
             <remarks>
             M-Documentation:
             Calculo de la ecuación d ela recta
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.evalua_recta(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the evalua_recta M-function.
             </summary>
             <remarks>
             M-Documentation:
             Calculo de la ecuación d ela recta
             </remarks>
             <param name="r">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.evalua_recta(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input interface to the evalua_recta M-function.
             </summary>
             <remarks>
             M-Documentation:
             Calculo de la ecuación d ela recta
             </remarks>
             <param name="r">Input argument #1</param>
             <param name="x">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.evalua_recta(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the evalua_recta M-function.
             </summary>
             <remarks>
             M-Documentation:
             Calculo de la ecuación d ela recta
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.evalua_recta(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the evalua_recta M-function.
             </summary>
             <remarks>
             M-Documentation:
             Calculo de la ecuación d ela recta
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="r">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.evalua_recta(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input interface to the evalua_recta M-function.
             </summary>
             <remarks>
             M-Documentation:
             Calculo de la ecuación d ela recta
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="r">Input argument #1</param>
             <param name="x">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.evalua_recta(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the evalua_recta function in which the input and
             output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             Calculo de la ecuación d ela recta
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.imageDistance">
             <summary>
             Provides a single output, 0-input interface to the imageDistance M-function.
             </summary>
             <remarks>
             M-Documentation:
             binary image
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.imageDistance(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the imageDistance M-function.
             </summary>
             <remarks>
             M-Documentation:
             binary image
             </remarks>
             <param name="image">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.imageDistance(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input interface to the imageDistance M-function.
             </summary>
             <remarks>
             M-Documentation:
             binary image
             </remarks>
             <param name="image">Input argument #1</param>
             <param name="chain">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.imageDistance(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the imageDistance M-function.
             </summary>
             <remarks>
             M-Documentation:
             binary image
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.imageDistance(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the imageDistance M-function.
             </summary>
             <remarks>
             M-Documentation:
             binary image
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="image">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.imageDistance(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input interface to the imageDistance M-function.
             </summary>
             <remarks>
             M-Documentation:
             binary image
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="image">Input argument #1</param>
             <param name="chain">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.imageDistance(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the imageDistance function in which the input and
             output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             binary image
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.mas">
             <summary>
             Provides a single output, 0-input interface to the mas M-function.
             </summary>
             <remarks>
             M-Documentation:
             Retorna la suma vectorial de dos puntos
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.mas(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the mas M-function.
             </summary>
             <remarks>
             M-Documentation:
             Retorna la suma vectorial de dos puntos
             </remarks>
             <param name="p1">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.mas(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input interface to the mas M-function.
             </summary>
             <remarks>
             M-Documentation:
             Retorna la suma vectorial de dos puntos
             </remarks>
             <param name="p1">Input argument #1</param>
             <param name="p2">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.mas(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the mas M-function.
             </summary>
             <remarks>
             M-Documentation:
             Retorna la suma vectorial de dos puntos
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.mas(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the mas M-function.
             </summary>
             <remarks>
             M-Documentation:
             Retorna la suma vectorial de dos puntos
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="p1">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.mas(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input interface to the mas M-function.
             </summary>
             <remarks>
             M-Documentation:
             Retorna la suma vectorial de dos puntos
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="p1">Input argument #1</param>
             <param name="p2">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.mas(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the mas function in which the input and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             Retorna la suma vectorial de dos puntos
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.obstaculo_crecido">
             <summary>
             Provides a single output, 0-input interface to the obstaculo_crecido
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             Esta función calcula espacio prohibido de configuraciones de un brazo
             mecanico representado por el segmento "a". El resultado es una lista de
             puntos que representan el obstáculo crecido: "RmasP"
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.obstaculo_crecido(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the obstaculo_crecido
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             Esta función calcula espacio prohibido de configuraciones de un brazo
             mecanico representado por el segmento "a". El resultado es una lista de
             puntos que representan el obstáculo crecido: "RmasP"
             </remarks>
             <param name="a">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.obstaculo_crecido(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input interface to the obstaculo_crecido
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             Esta función calcula espacio prohibido de configuraciones de un brazo
             mecanico representado por el segmento "a". El resultado es una lista de
             puntos que representan el obstáculo crecido: "RmasP"
             </remarks>
             <param name="a">Input argument #1</param>
             <param name="L_puntos">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.obstaculo_crecido(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the obstaculo_crecido M-function.
             </summary>
             <remarks>
             M-Documentation:
             Esta función calcula espacio prohibido de configuraciones de un brazo
             mecanico representado por el segmento "a". El resultado es una lista de
             puntos que representan el obstáculo crecido: "RmasP"
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.obstaculo_crecido(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the obstaculo_crecido M-function.
             </summary>
             <remarks>
             M-Documentation:
             Esta función calcula espacio prohibido de configuraciones de un brazo
             mecanico representado por el segmento "a". El resultado es una lista de
             puntos que representan el obstáculo crecido: "RmasP"
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="a">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.obstaculo_crecido(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input interface to the obstaculo_crecido M-function.
             </summary>
             <remarks>
             M-Documentation:
             Esta función calcula espacio prohibido de configuraciones de un brazo
             mecanico representado por el segmento "a". El resultado es una lista de
             puntos que representan el obstáculo crecido: "RmasP"
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="a">Input argument #1</param>
             <param name="L_puntos">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.obstaculo_crecido(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the obstaculo_crecido function in which the input and
             output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             Esta función calcula espacio prohibido de configuraciones de un brazo
             mecanico representado por el segmento "a". El resultado es una lista de
             puntos que representan el obstáculo crecido: "RmasP"
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.PF">
             <summary>
             Provides a single output, 0-input interface to the PF M-function.
             </summary>
             <remarks>
             M-Documentation:
             sampling
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.PF(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the PF M-function.
             </summary>
             <remarks>
             M-Documentation:
             sampling
             </remarks>
             <param name="goal">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.PF(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input interface to the PF M-function.
             </summary>
             <remarks>
             M-Documentation:
             sampling
             </remarks>
             <param name="goal">Input argument #1</param>
             <param name="particles">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.PF(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 3-input interface to the PF M-function.
             </summary>
             <remarks>
             M-Documentation:
             sampling
             </remarks>
             <param name="goal">Input argument #1</param>
             <param name="particles">Input argument #2</param>
             <param name="S">Input argument #3</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.PF(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the PF M-function.
             </summary>
             <remarks>
             M-Documentation:
             sampling
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.PF(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the PF M-function.
             </summary>
             <remarks>
             M-Documentation:
             sampling
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="goal">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.PF(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input interface to the PF M-function.
             </summary>
             <remarks>
             M-Documentation:
             sampling
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="goal">Input argument #1</param>
             <param name="particles">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.PF(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 3-input interface to the PF M-function.
             </summary>
             <remarks>
             M-Documentation:
             sampling
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="goal">Input argument #1</param>
             <param name="particles">Input argument #2</param>
             <param name="S">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.PF(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the PF function in which the input and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             sampling
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.pik">
             <summary>
             Provides a single output, 0-input interface to the pik M-function.
             </summary>
             <remarks>
             M-Documentation:
             chainResult = chain;
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.pik(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the pik M-function.
             </summary>
             <remarks>
             M-Documentation:
             chainResult = chain;
             </remarks>
             <param name="max_iter">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.pik(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input interface to the pik M-function.
             </summary>
             <remarks>
             M-Documentation:
             chainResult = chain;
             </remarks>
             <param name="max_iter">Input argument #1</param>
             <param name="epsilon">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.pik(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 3-input interface to the pik M-function.
             </summary>
             <remarks>
             M-Documentation:
             chainResult = chain;
             </remarks>
             <param name="max_iter">Input argument #1</param>
             <param name="epsilon">Input argument #2</param>
             <param name="chain">Input argument #3</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.pik(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 4-input interface to the pik M-function.
             </summary>
             <remarks>
             M-Documentation:
             chainResult = chain;
             </remarks>
             <param name="max_iter">Input argument #1</param>
             <param name="epsilon">Input argument #2</param>
             <param name="chain">Input argument #3</param>
             <param name="goal">Input argument #4</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.pik(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 5-input interface to the pik M-function.
             </summary>
             <remarks>
             M-Documentation:
             chainResult = chain;
             </remarks>
             <param name="max_iter">Input argument #1</param>
             <param name="epsilon">Input argument #2</param>
             <param name="chain">Input argument #3</param>
             <param name="goal">Input argument #4</param>
             <param name="particles">Input argument #5</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.pik(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 6-input interface to the pik M-function.
             </summary>
             <remarks>
             M-Documentation:
             chainResult = chain;
             </remarks>
             <param name="max_iter">Input argument #1</param>
             <param name="epsilon">Input argument #2</param>
             <param name="chain">Input argument #3</param>
             <param name="goal">Input argument #4</param>
             <param name="particles">Input argument #5</param>
             <param name="S">Input argument #6</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.pik(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the pik M-function.
             </summary>
             <remarks>
             M-Documentation:
             chainResult = chain;
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.pik(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the pik M-function.
             </summary>
             <remarks>
             M-Documentation:
             chainResult = chain;
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="max_iter">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.pik(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input interface to the pik M-function.
             </summary>
             <remarks>
             M-Documentation:
             chainResult = chain;
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="max_iter">Input argument #1</param>
             <param name="epsilon">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.pik(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 3-input interface to the pik M-function.
             </summary>
             <remarks>
             M-Documentation:
             chainResult = chain;
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="max_iter">Input argument #1</param>
             <param name="epsilon">Input argument #2</param>
             <param name="chain">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.pik(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 4-input interface to the pik M-function.
             </summary>
             <remarks>
             M-Documentation:
             chainResult = chain;
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="max_iter">Input argument #1</param>
             <param name="epsilon">Input argument #2</param>
             <param name="chain">Input argument #3</param>
             <param name="goal">Input argument #4</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.pik(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 5-input interface to the pik M-function.
             </summary>
             <remarks>
             M-Documentation:
             chainResult = chain;
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="max_iter">Input argument #1</param>
             <param name="epsilon">Input argument #2</param>
             <param name="chain">Input argument #3</param>
             <param name="goal">Input argument #4</param>
             <param name="particles">Input argument #5</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.pik(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 6-input interface to the pik M-function.
             </summary>
             <remarks>
             M-Documentation:
             chainResult = chain;
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="max_iter">Input argument #1</param>
             <param name="epsilon">Input argument #2</param>
             <param name="chain">Input argument #3</param>
             <param name="goal">Input argument #4</param>
             <param name="particles">Input argument #5</param>
             <param name="S">Input argument #6</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.pik(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the pik function in which the input and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             chainResult = chain;
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.point2quaternion">
             <summary>
             Provides a single output, 0-input interface to the point2quaternion M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.point2quaternion(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the point2quaternion M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="p">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.point2quaternion(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the point2quaternion M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.point2quaternion(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the point2quaternion M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="p">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.point2quaternion(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the point2quaternion function in which the input and
             output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.pointDistance">
             <summary>
             Provides a single output, 0-input interface to the pointDistance M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.pointDistance(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the pointDistance M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="p1">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.pointDistance(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input interface to the pointDistance M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="p1">Input argument #1</param>
             <param name="p2">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.pointDistance(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the pointDistance M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.pointDistance(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the pointDistance M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="p1">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.pointDistance(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input interface to the pointDistance M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="p1">Input argument #1</param>
             <param name="p2">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.pointDistance(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the pointDistance function in which the input and
             output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.positions2chain">
             <summary>
             Provides a single output, 0-input interface to the positions2chain M-function.
             </summary>
             <remarks>
             M-Documentation:
             Se asume que la primera posicion es el (0,0)
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.positions2chain(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the positions2chain M-function.
             </summary>
             <remarks>
             M-Documentation:
             Se asume que la primera posicion es el (0,0)
             </remarks>
             <param name="x">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.positions2chain(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input interface to the positions2chain M-function.
             </summary>
             <remarks>
             M-Documentation:
             Se asume que la primera posicion es el (0,0)
             </remarks>
             <param name="x">Input argument #1</param>
             <param name="y">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.positions2chain(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the positions2chain M-function.
             </summary>
             <remarks>
             M-Documentation:
             Se asume que la primera posicion es el (0,0)
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.positions2chain(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the positions2chain M-function.
             </summary>
             <remarks>
             M-Documentation:
             Se asume que la primera posicion es el (0,0)
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="x">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.positions2chain(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input interface to the positions2chain M-function.
             </summary>
             <remarks>
             M-Documentation:
             Se asume que la primera posicion es el (0,0)
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="x">Input argument #1</param>
             <param name="y">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.positions2chain(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the positions2chain function in which the input and
             output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             Se asume que la primera posicion es el (0,0)
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.PrtFltr_MkwskSum">
             <summary>
             Provides a single output, 0-input interface to the PrtFltr_MkwskSum M-function.
             </summary>
             <remarks>
             M-Documentation:
             Esta funcion es la que engloba los algoritmos de Filtro de Particulas
             y Suma de Minkowski. Como parámetros se le pasa:
             max_iter: Maximo de iteraciones que realizara el filtraje
             epsilon:  tolerancia de cercanía con el objetivo
             S:        el sistema de obstaculos
             x_axis:   posiciones en el eje x de la cadena en su posición "inicial" 
             y_axis:   posiciones en el eje y de la cadena en su posición "inicial" 
             obj:      objetivo intermedio 
             samples:  cantidad de particulas que se generaran
             media_gausiana: media para la generación de particulas (0.03)
             S: 
             S = [O1 O2 ... Ok]
             Ok.ptos: lista de puntos, ordenados tomando como principio el que menos
             coordenada "y" tenga (menos "x") en caso de empate y siguiendo el orden
             inverso a a las manesillas del reloj
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.PrtFltr_MkwskSum(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the PrtFltr_MkwskSum M-function.
             </summary>
             <remarks>
             M-Documentation:
             Esta funcion es la que engloba los algoritmos de Filtro de Particulas
             y Suma de Minkowski. Como parámetros se le pasa:
             max_iter: Maximo de iteraciones que realizara el filtraje
             epsilon:  tolerancia de cercanía con el objetivo
             S:        el sistema de obstaculos
             x_axis:   posiciones en el eje x de la cadena en su posición "inicial" 
             y_axis:   posiciones en el eje y de la cadena en su posición "inicial" 
             obj:      objetivo intermedio 
             samples:  cantidad de particulas que se generaran
             media_gausiana: media para la generación de particulas (0.03)
             S: 
             S = [O1 O2 ... Ok]
             Ok.ptos: lista de puntos, ordenados tomando como principio el que menos
             coordenada "y" tenga (menos "x") en caso de empate y siguiendo el orden
             inverso a a las manesillas del reloj
             </remarks>
             <param name="max_iter">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.PrtFltr_MkwskSum(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input interface to the PrtFltr_MkwskSum M-function.
             </summary>
             <remarks>
             M-Documentation:
             Esta funcion es la que engloba los algoritmos de Filtro de Particulas
             y Suma de Minkowski. Como parámetros se le pasa:
             max_iter: Maximo de iteraciones que realizara el filtraje
             epsilon:  tolerancia de cercanía con el objetivo
             S:        el sistema de obstaculos
             x_axis:   posiciones en el eje x de la cadena en su posición "inicial" 
             y_axis:   posiciones en el eje y de la cadena en su posición "inicial" 
             obj:      objetivo intermedio 
             samples:  cantidad de particulas que se generaran
             media_gausiana: media para la generación de particulas (0.03)
             S: 
             S = [O1 O2 ... Ok]
             Ok.ptos: lista de puntos, ordenados tomando como principio el que menos
             coordenada "y" tenga (menos "x") en caso de empate y siguiendo el orden
             inverso a a las manesillas del reloj
             </remarks>
             <param name="max_iter">Input argument #1</param>
             <param name="epsilon">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.PrtFltr_MkwskSum(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 3-input interface to the PrtFltr_MkwskSum M-function.
             </summary>
             <remarks>
             M-Documentation:
             Esta funcion es la que engloba los algoritmos de Filtro de Particulas
             y Suma de Minkowski. Como parámetros se le pasa:
             max_iter: Maximo de iteraciones que realizara el filtraje
             epsilon:  tolerancia de cercanía con el objetivo
             S:        el sistema de obstaculos
             x_axis:   posiciones en el eje x de la cadena en su posición "inicial" 
             y_axis:   posiciones en el eje y de la cadena en su posición "inicial" 
             obj:      objetivo intermedio 
             samples:  cantidad de particulas que se generaran
             media_gausiana: media para la generación de particulas (0.03)
             S: 
             S = [O1 O2 ... Ok]
             Ok.ptos: lista de puntos, ordenados tomando como principio el que menos
             coordenada "y" tenga (menos "x") en caso de empate y siguiendo el orden
             inverso a a las manesillas del reloj
             </remarks>
             <param name="max_iter">Input argument #1</param>
             <param name="epsilon">Input argument #2</param>
             <param name="S">Input argument #3</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.PrtFltr_MkwskSum(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 4-input interface to the PrtFltr_MkwskSum M-function.
             </summary>
             <remarks>
             M-Documentation:
             Esta funcion es la que engloba los algoritmos de Filtro de Particulas
             y Suma de Minkowski. Como parámetros se le pasa:
             max_iter: Maximo de iteraciones que realizara el filtraje
             epsilon:  tolerancia de cercanía con el objetivo
             S:        el sistema de obstaculos
             x_axis:   posiciones en el eje x de la cadena en su posición "inicial" 
             y_axis:   posiciones en el eje y de la cadena en su posición "inicial" 
             obj:      objetivo intermedio 
             samples:  cantidad de particulas que se generaran
             media_gausiana: media para la generación de particulas (0.03)
             S: 
             S = [O1 O2 ... Ok]
             Ok.ptos: lista de puntos, ordenados tomando como principio el que menos
             coordenada "y" tenga (menos "x") en caso de empate y siguiendo el orden
             inverso a a las manesillas del reloj
             </remarks>
             <param name="max_iter">Input argument #1</param>
             <param name="epsilon">Input argument #2</param>
             <param name="S">Input argument #3</param>
             <param name="x_axis">Input argument #4</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.PrtFltr_MkwskSum(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 5-input interface to the PrtFltr_MkwskSum M-function.
             </summary>
             <remarks>
             M-Documentation:
             Esta funcion es la que engloba los algoritmos de Filtro de Particulas
             y Suma de Minkowski. Como parámetros se le pasa:
             max_iter: Maximo de iteraciones que realizara el filtraje
             epsilon:  tolerancia de cercanía con el objetivo
             S:        el sistema de obstaculos
             x_axis:   posiciones en el eje x de la cadena en su posición "inicial" 
             y_axis:   posiciones en el eje y de la cadena en su posición "inicial" 
             obj:      objetivo intermedio 
             samples:  cantidad de particulas que se generaran
             media_gausiana: media para la generación de particulas (0.03)
             S: 
             S = [O1 O2 ... Ok]
             Ok.ptos: lista de puntos, ordenados tomando como principio el que menos
             coordenada "y" tenga (menos "x") en caso de empate y siguiendo el orden
             inverso a a las manesillas del reloj
             </remarks>
             <param name="max_iter">Input argument #1</param>
             <param name="epsilon">Input argument #2</param>
             <param name="S">Input argument #3</param>
             <param name="x_axis">Input argument #4</param>
             <param name="y_axis">Input argument #5</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.PrtFltr_MkwskSum(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 6-input interface to the PrtFltr_MkwskSum M-function.
             </summary>
             <remarks>
             M-Documentation:
             Esta funcion es la que engloba los algoritmos de Filtro de Particulas
             y Suma de Minkowski. Como parámetros se le pasa:
             max_iter: Maximo de iteraciones que realizara el filtraje
             epsilon:  tolerancia de cercanía con el objetivo
             S:        el sistema de obstaculos
             x_axis:   posiciones en el eje x de la cadena en su posición "inicial" 
             y_axis:   posiciones en el eje y de la cadena en su posición "inicial" 
             obj:      objetivo intermedio 
             samples:  cantidad de particulas que se generaran
             media_gausiana: media para la generación de particulas (0.03)
             S: 
             S = [O1 O2 ... Ok]
             Ok.ptos: lista de puntos, ordenados tomando como principio el que menos
             coordenada "y" tenga (menos "x") en caso de empate y siguiendo el orden
             inverso a a las manesillas del reloj
             </remarks>
             <param name="max_iter">Input argument #1</param>
             <param name="epsilon">Input argument #2</param>
             <param name="S">Input argument #3</param>
             <param name="x_axis">Input argument #4</param>
             <param name="y_axis">Input argument #5</param>
             <param name="obj">Input argument #6</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.PrtFltr_MkwskSum(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 7-input interface to the PrtFltr_MkwskSum M-function.
             </summary>
             <remarks>
             M-Documentation:
             Esta funcion es la que engloba los algoritmos de Filtro de Particulas
             y Suma de Minkowski. Como parámetros se le pasa:
             max_iter: Maximo de iteraciones que realizara el filtraje
             epsilon:  tolerancia de cercanía con el objetivo
             S:        el sistema de obstaculos
             x_axis:   posiciones en el eje x de la cadena en su posición "inicial" 
             y_axis:   posiciones en el eje y de la cadena en su posición "inicial" 
             obj:      objetivo intermedio 
             samples:  cantidad de particulas que se generaran
             media_gausiana: media para la generación de particulas (0.03)
             S: 
             S = [O1 O2 ... Ok]
             Ok.ptos: lista de puntos, ordenados tomando como principio el que menos
             coordenada "y" tenga (menos "x") en caso de empate y siguiendo el orden
             inverso a a las manesillas del reloj
             </remarks>
             <param name="max_iter">Input argument #1</param>
             <param name="epsilon">Input argument #2</param>
             <param name="S">Input argument #3</param>
             <param name="x_axis">Input argument #4</param>
             <param name="y_axis">Input argument #5</param>
             <param name="obj">Input argument #6</param>
             <param name="samples">Input argument #7</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.PrtFltr_MkwskSum(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 8-input interface to the PrtFltr_MkwskSum M-function.
             </summary>
             <remarks>
             M-Documentation:
             Esta funcion es la que engloba los algoritmos de Filtro de Particulas
             y Suma de Minkowski. Como parámetros se le pasa:
             max_iter: Maximo de iteraciones que realizara el filtraje
             epsilon:  tolerancia de cercanía con el objetivo
             S:        el sistema de obstaculos
             x_axis:   posiciones en el eje x de la cadena en su posición "inicial" 
             y_axis:   posiciones en el eje y de la cadena en su posición "inicial" 
             obj:      objetivo intermedio 
             samples:  cantidad de particulas que se generaran
             media_gausiana: media para la generación de particulas (0.03)
             S: 
             S = [O1 O2 ... Ok]
             Ok.ptos: lista de puntos, ordenados tomando como principio el que menos
             coordenada "y" tenga (menos "x") en caso de empate y siguiendo el orden
             inverso a a las manesillas del reloj
             </remarks>
             <param name="max_iter">Input argument #1</param>
             <param name="epsilon">Input argument #2</param>
             <param name="S">Input argument #3</param>
             <param name="x_axis">Input argument #4</param>
             <param name="y_axis">Input argument #5</param>
             <param name="obj">Input argument #6</param>
             <param name="samples">Input argument #7</param>
             <param name="media_gausiana">Input argument #8</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.PrtFltr_MkwskSum(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the PrtFltr_MkwskSum M-function.
             </summary>
             <remarks>
             M-Documentation:
             Esta funcion es la que engloba los algoritmos de Filtro de Particulas
             y Suma de Minkowski. Como parámetros se le pasa:
             max_iter: Maximo de iteraciones que realizara el filtraje
             epsilon:  tolerancia de cercanía con el objetivo
             S:        el sistema de obstaculos
             x_axis:   posiciones en el eje x de la cadena en su posición "inicial" 
             y_axis:   posiciones en el eje y de la cadena en su posición "inicial" 
             obj:      objetivo intermedio 
             samples:  cantidad de particulas que se generaran
             media_gausiana: media para la generación de particulas (0.03)
             S: 
             S = [O1 O2 ... Ok]
             Ok.ptos: lista de puntos, ordenados tomando como principio el que menos
             coordenada "y" tenga (menos "x") en caso de empate y siguiendo el orden
             inverso a a las manesillas del reloj
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.PrtFltr_MkwskSum(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the PrtFltr_MkwskSum M-function.
             </summary>
             <remarks>
             M-Documentation:
             Esta funcion es la que engloba los algoritmos de Filtro de Particulas
             y Suma de Minkowski. Como parámetros se le pasa:
             max_iter: Maximo de iteraciones que realizara el filtraje
             epsilon:  tolerancia de cercanía con el objetivo
             S:        el sistema de obstaculos
             x_axis:   posiciones en el eje x de la cadena en su posición "inicial" 
             y_axis:   posiciones en el eje y de la cadena en su posición "inicial" 
             obj:      objetivo intermedio 
             samples:  cantidad de particulas que se generaran
             media_gausiana: media para la generación de particulas (0.03)
             S: 
             S = [O1 O2 ... Ok]
             Ok.ptos: lista de puntos, ordenados tomando como principio el que menos
             coordenada "y" tenga (menos "x") en caso de empate y siguiendo el orden
             inverso a a las manesillas del reloj
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="max_iter">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.PrtFltr_MkwskSum(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input interface to the PrtFltr_MkwskSum M-function.
             </summary>
             <remarks>
             M-Documentation:
             Esta funcion es la que engloba los algoritmos de Filtro de Particulas
             y Suma de Minkowski. Como parámetros se le pasa:
             max_iter: Maximo de iteraciones que realizara el filtraje
             epsilon:  tolerancia de cercanía con el objetivo
             S:        el sistema de obstaculos
             x_axis:   posiciones en el eje x de la cadena en su posición "inicial" 
             y_axis:   posiciones en el eje y de la cadena en su posición "inicial" 
             obj:      objetivo intermedio 
             samples:  cantidad de particulas que se generaran
             media_gausiana: media para la generación de particulas (0.03)
             S: 
             S = [O1 O2 ... Ok]
             Ok.ptos: lista de puntos, ordenados tomando como principio el que menos
             coordenada "y" tenga (menos "x") en caso de empate y siguiendo el orden
             inverso a a las manesillas del reloj
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="max_iter">Input argument #1</param>
             <param name="epsilon">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.PrtFltr_MkwskSum(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 3-input interface to the PrtFltr_MkwskSum M-function.
             </summary>
             <remarks>
             M-Documentation:
             Esta funcion es la que engloba los algoritmos de Filtro de Particulas
             y Suma de Minkowski. Como parámetros se le pasa:
             max_iter: Maximo de iteraciones que realizara el filtraje
             epsilon:  tolerancia de cercanía con el objetivo
             S:        el sistema de obstaculos
             x_axis:   posiciones en el eje x de la cadena en su posición "inicial" 
             y_axis:   posiciones en el eje y de la cadena en su posición "inicial" 
             obj:      objetivo intermedio 
             samples:  cantidad de particulas que se generaran
             media_gausiana: media para la generación de particulas (0.03)
             S: 
             S = [O1 O2 ... Ok]
             Ok.ptos: lista de puntos, ordenados tomando como principio el que menos
             coordenada "y" tenga (menos "x") en caso de empate y siguiendo el orden
             inverso a a las manesillas del reloj
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="max_iter">Input argument #1</param>
             <param name="epsilon">Input argument #2</param>
             <param name="S">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.PrtFltr_MkwskSum(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 4-input interface to the PrtFltr_MkwskSum M-function.
             </summary>
             <remarks>
             M-Documentation:
             Esta funcion es la que engloba los algoritmos de Filtro de Particulas
             y Suma de Minkowski. Como parámetros se le pasa:
             max_iter: Maximo de iteraciones que realizara el filtraje
             epsilon:  tolerancia de cercanía con el objetivo
             S:        el sistema de obstaculos
             x_axis:   posiciones en el eje x de la cadena en su posición "inicial" 
             y_axis:   posiciones en el eje y de la cadena en su posición "inicial" 
             obj:      objetivo intermedio 
             samples:  cantidad de particulas que se generaran
             media_gausiana: media para la generación de particulas (0.03)
             S: 
             S = [O1 O2 ... Ok]
             Ok.ptos: lista de puntos, ordenados tomando como principio el que menos
             coordenada "y" tenga (menos "x") en caso de empate y siguiendo el orden
             inverso a a las manesillas del reloj
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="max_iter">Input argument #1</param>
             <param name="epsilon">Input argument #2</param>
             <param name="S">Input argument #3</param>
             <param name="x_axis">Input argument #4</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.PrtFltr_MkwskSum(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 5-input interface to the PrtFltr_MkwskSum M-function.
             </summary>
             <remarks>
             M-Documentation:
             Esta funcion es la que engloba los algoritmos de Filtro de Particulas
             y Suma de Minkowski. Como parámetros se le pasa:
             max_iter: Maximo de iteraciones que realizara el filtraje
             epsilon:  tolerancia de cercanía con el objetivo
             S:        el sistema de obstaculos
             x_axis:   posiciones en el eje x de la cadena en su posición "inicial" 
             y_axis:   posiciones en el eje y de la cadena en su posición "inicial" 
             obj:      objetivo intermedio 
             samples:  cantidad de particulas que se generaran
             media_gausiana: media para la generación de particulas (0.03)
             S: 
             S = [O1 O2 ... Ok]
             Ok.ptos: lista de puntos, ordenados tomando como principio el que menos
             coordenada "y" tenga (menos "x") en caso de empate y siguiendo el orden
             inverso a a las manesillas del reloj
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="max_iter">Input argument #1</param>
             <param name="epsilon">Input argument #2</param>
             <param name="S">Input argument #3</param>
             <param name="x_axis">Input argument #4</param>
             <param name="y_axis">Input argument #5</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.PrtFltr_MkwskSum(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 6-input interface to the PrtFltr_MkwskSum M-function.
             </summary>
             <remarks>
             M-Documentation:
             Esta funcion es la que engloba los algoritmos de Filtro de Particulas
             y Suma de Minkowski. Como parámetros se le pasa:
             max_iter: Maximo de iteraciones que realizara el filtraje
             epsilon:  tolerancia de cercanía con el objetivo
             S:        el sistema de obstaculos
             x_axis:   posiciones en el eje x de la cadena en su posición "inicial" 
             y_axis:   posiciones en el eje y de la cadena en su posición "inicial" 
             obj:      objetivo intermedio 
             samples:  cantidad de particulas que se generaran
             media_gausiana: media para la generación de particulas (0.03)
             S: 
             S = [O1 O2 ... Ok]
             Ok.ptos: lista de puntos, ordenados tomando como principio el que menos
             coordenada "y" tenga (menos "x") en caso de empate y siguiendo el orden
             inverso a a las manesillas del reloj
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="max_iter">Input argument #1</param>
             <param name="epsilon">Input argument #2</param>
             <param name="S">Input argument #3</param>
             <param name="x_axis">Input argument #4</param>
             <param name="y_axis">Input argument #5</param>
             <param name="obj">Input argument #6</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.PrtFltr_MkwskSum(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 7-input interface to the PrtFltr_MkwskSum M-function.
             </summary>
             <remarks>
             M-Documentation:
             Esta funcion es la que engloba los algoritmos de Filtro de Particulas
             y Suma de Minkowski. Como parámetros se le pasa:
             max_iter: Maximo de iteraciones que realizara el filtraje
             epsilon:  tolerancia de cercanía con el objetivo
             S:        el sistema de obstaculos
             x_axis:   posiciones en el eje x de la cadena en su posición "inicial" 
             y_axis:   posiciones en el eje y de la cadena en su posición "inicial" 
             obj:      objetivo intermedio 
             samples:  cantidad de particulas que se generaran
             media_gausiana: media para la generación de particulas (0.03)
             S: 
             S = [O1 O2 ... Ok]
             Ok.ptos: lista de puntos, ordenados tomando como principio el que menos
             coordenada "y" tenga (menos "x") en caso de empate y siguiendo el orden
             inverso a a las manesillas del reloj
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="max_iter">Input argument #1</param>
             <param name="epsilon">Input argument #2</param>
             <param name="S">Input argument #3</param>
             <param name="x_axis">Input argument #4</param>
             <param name="y_axis">Input argument #5</param>
             <param name="obj">Input argument #6</param>
             <param name="samples">Input argument #7</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.PrtFltr_MkwskSum(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 8-input interface to the PrtFltr_MkwskSum M-function.
             </summary>
             <remarks>
             M-Documentation:
             Esta funcion es la que engloba los algoritmos de Filtro de Particulas
             y Suma de Minkowski. Como parámetros se le pasa:
             max_iter: Maximo de iteraciones que realizara el filtraje
             epsilon:  tolerancia de cercanía con el objetivo
             S:        el sistema de obstaculos
             x_axis:   posiciones en el eje x de la cadena en su posición "inicial" 
             y_axis:   posiciones en el eje y de la cadena en su posición "inicial" 
             obj:      objetivo intermedio 
             samples:  cantidad de particulas que se generaran
             media_gausiana: media para la generación de particulas (0.03)
             S: 
             S = [O1 O2 ... Ok]
             Ok.ptos: lista de puntos, ordenados tomando como principio el que menos
             coordenada "y" tenga (menos "x") en caso de empate y siguiendo el orden
             inverso a a las manesillas del reloj
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="max_iter">Input argument #1</param>
             <param name="epsilon">Input argument #2</param>
             <param name="S">Input argument #3</param>
             <param name="x_axis">Input argument #4</param>
             <param name="y_axis">Input argument #5</param>
             <param name="obj">Input argument #6</param>
             <param name="samples">Input argument #7</param>
             <param name="media_gausiana">Input argument #8</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.PrtFltr_MkwskSum(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the PrtFltr_MkwskSum function in which the input and
             output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             Esta funcion es la que engloba los algoritmos de Filtro de Particulas
             y Suma de Minkowski. Como parámetros se le pasa:
             max_iter: Maximo de iteraciones que realizara el filtraje
             epsilon:  tolerancia de cercanía con el objetivo
             S:        el sistema de obstaculos
             x_axis:   posiciones en el eje x de la cadena en su posición "inicial" 
             y_axis:   posiciones en el eje y de la cadena en su posición "inicial" 
             obj:      objetivo intermedio 
             samples:  cantidad de particulas que se generaran
             media_gausiana: media para la generación de particulas (0.03)
             S: 
             S = [O1 O2 ... Ok]
             Ok.ptos: lista de puntos, ordenados tomando como principio el que menos
             coordenada "y" tenga (menos "x") en caso de empate y siguiendo el orden
             inverso a a las manesillas del reloj
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternion">
             <summary>
             Provides a single output, 0-input interface to the quaternion M-function.
             </summary>
             <remarks>
             M-Documentation:
             TODO: Tal vegada s'hauria de fer un get i set per quaternion. Per ara ho
             deixam aixÃ­.
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternion(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the quaternion M-function.
             </summary>
             <remarks>
             M-Documentation:
             TODO: Tal vegada s'hauria de fer un get i set per quaternion. Per ara ho
             deixam aixÃ­.
             </remarks>
             <param name="s">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternion(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input interface to the quaternion M-function.
             </summary>
             <remarks>
             M-Documentation:
             TODO: Tal vegada s'hauria de fer un get i set per quaternion. Per ara ho
             deixam aixÃ­.
             </remarks>
             <param name="s">Input argument #1</param>
             <param name="p">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternion(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the quaternion M-function.
             </summary>
             <remarks>
             M-Documentation:
             TODO: Tal vegada s'hauria de fer un get i set per quaternion. Per ara ho
             deixam aixÃ­.
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternion(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the quaternion M-function.
             </summary>
             <remarks>
             M-Documentation:
             TODO: Tal vegada s'hauria de fer un get i set per quaternion. Per ara ho
             deixam aixÃ­.
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="s">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternion(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input interface to the quaternion M-function.
             </summary>
             <remarks>
             M-Documentation:
             TODO: Tal vegada s'hauria de fer un get i set per quaternion. Per ara ho
             deixam aixÃ­.
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="s">Input argument #1</param>
             <param name="p">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternion(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the quaternion function in which the input and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             TODO: Tal vegada s'hauria de fer un get i set per quaternion. Per ara ho
             deixam aixÃ­.
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternion2point">
             <summary>
             Provides a single output, 0-input interface to the quaternion2point M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternion2point(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the quaternion2point M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="q">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternion2point(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the quaternion2point M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternion2point(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the quaternion2point M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="q">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternion2point(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the quaternion2point function in which the input and
             output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionConjugate">
             <summary>
             Provides a single output, 0-input interface to the quaternionConjugate
             M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionConjugate(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the quaternionConjugate
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="q">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionConjugate(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the quaternionConjugate M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionConjugate(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the quaternionConjugate M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="q">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionConjugate(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the quaternionConjugate function in which the input
             and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionDistance">
             <summary>
             Provides a single output, 0-input interface to the quaternionDistance
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             TODO: Per ara no tenim en compte els pesos.
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionDistance(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the quaternionDistance
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             TODO: Per ara no tenim en compte els pesos.
             </remarks>
             <param name="qDestination">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionDistance(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input interface to the quaternionDistance
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             TODO: Per ara no tenim en compte els pesos.
             </remarks>
             <param name="qDestination">Input argument #1</param>
             <param name="qSamples">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionDistance(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the quaternionDistance M-function.
             </summary>
             <remarks>
             M-Documentation:
             TODO: Per ara no tenim en compte els pesos.
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionDistance(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the quaternionDistance M-function.
             </summary>
             <remarks>
             M-Documentation:
             TODO: Per ara no tenim en compte els pesos.
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="qDestination">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionDistance(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input interface to the quaternionDistance M-function.
             </summary>
             <remarks>
             M-Documentation:
             TODO: Per ara no tenim en compte els pesos.
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="qDestination">Input argument #1</param>
             <param name="qSamples">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionDistance(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the quaternionDistance function in which the input
             and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             TODO: Per ara no tenim en compte els pesos.
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionExponentialMap">
             <summary>
             Provides a single output, 0-input interface to the quaternionExponentialMap
             M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionExponentialMap(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the quaternionExponentialMap
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="p">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionExponentialMap(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the quaternionExponentialMap
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionExponentialMap(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the quaternionExponentialMap
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="p">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionExponentialMap(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the quaternionExponentialMap function in which the
             input and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionInnerProduct">
             <summary>
             Provides a single output, 0-input interface to the quaternionInnerProduct
             M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionInnerProduct(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the quaternionInnerProduct
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="q1">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionInnerProduct(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input interface to the quaternionInnerProduct
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="q1">Input argument #1</param>
             <param name="q2">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionInnerProduct(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the quaternionInnerProduct
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionInnerProduct(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the quaternionInnerProduct
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="q1">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionInnerProduct(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input interface to the quaternionInnerProduct
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="q1">Input argument #1</param>
             <param name="q2">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionInnerProduct(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the quaternionInnerProduct function in which the
             input and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionLogarithmicMap">
             <summary>
             Provides a single output, 0-input interface to the quaternionLogarithmicMap
             M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionLogarithmicMap(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the quaternionLogarithmicMap
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="q">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionLogarithmicMap(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the quaternionLogarithmicMap
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionLogarithmicMap(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the quaternionLogarithmicMap
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="q">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionLogarithmicMap(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the quaternionLogarithmicMap function in which the
             input and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionNorm">
             <summary>
             Provides a single output, 0-input interface to the quaternionNorm M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionNorm(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the quaternionNorm M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="q">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionNorm(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the quaternionNorm M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionNorm(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the quaternionNorm M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="q">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionNorm(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the quaternionNorm function in which the input and
             output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionNormalize">
             <summary>
             Provides a single output, 0-input interface to the quaternionNormalize
             M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionNormalize(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the quaternionNormalize
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="q1">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionNormalize(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the quaternionNormalize M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionNormalize(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the quaternionNormalize M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="q1">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionNormalize(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the quaternionNormalize function in which the input
             and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionProduct">
             <summary>
             Provides a single output, 0-input interface to the quaternionProduct
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             x = q1(2) * q2(1)  + q1(3) * q2(4) - q1(4) * q2(3) + q1(1) * q2(2);
             y = -q1(2) * q2(4) + q1(3) * q2(1) + q1(4) * q2(2) + q1(1) * q2(3);
             z = q1(2) * q2(3)  - q1(3) * q2(2) + q1(4) * q2(1) + q1(1) * q2(4);
             s = -q1(2) * q2(2) - q1(3) * q2(3) - q1(4) * q2(4) + q1(1) * q2(1);
             q=[s,x,y,z];</remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionProduct(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the quaternionProduct
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             x = q1(2) * q2(1)  + q1(3) * q2(4) - q1(4) * q2(3) + q1(1) * q2(2);
             y = -q1(2) * q2(4) + q1(3) * q2(1) + q1(4) * q2(2) + q1(1) * q2(3);
             z = q1(2) * q2(3)  - q1(3) * q2(2) + q1(4) * q2(1) + q1(1) * q2(4);
             s = -q1(2) * q2(2) - q1(3) * q2(3) - q1(4) * q2(4) + q1(1) * q2(1);
             q=[s,x,y,z];</remarks>
             <param name="q1">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionProduct(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input interface to the quaternionProduct
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             x = q1(2) * q2(1)  + q1(3) * q2(4) - q1(4) * q2(3) + q1(1) * q2(2);
             y = -q1(2) * q2(4) + q1(3) * q2(1) + q1(4) * q2(2) + q1(1) * q2(3);
             z = q1(2) * q2(3)  - q1(3) * q2(2) + q1(4) * q2(1) + q1(1) * q2(4);
             s = -q1(2) * q2(2) - q1(3) * q2(3) - q1(4) * q2(4) + q1(1) * q2(1);
             q=[s,x,y,z];</remarks>
             <param name="q1">Input argument #1</param>
             <param name="q2">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionProduct(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the quaternionProduct M-function.
             </summary>
             <remarks>
             M-Documentation:
             x = q1(2) * q2(1)  + q1(3) * q2(4) - q1(4) * q2(3) + q1(1) * q2(2);
             y = -q1(2) * q2(4) + q1(3) * q2(1) + q1(4) * q2(2) + q1(1) * q2(3);
             z = q1(2) * q2(3)  - q1(3) * q2(2) + q1(4) * q2(1) + q1(1) * q2(4);
             s = -q1(2) * q2(2) - q1(3) * q2(3) - q1(4) * q2(4) + q1(1) * q2(1);
             q=[s,x,y,z];</remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionProduct(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the quaternionProduct M-function.
             </summary>
             <remarks>
             M-Documentation:
             x = q1(2) * q2(1)  + q1(3) * q2(4) - q1(4) * q2(3) + q1(1) * q2(2);
             y = -q1(2) * q2(4) + q1(3) * q2(1) + q1(4) * q2(2) + q1(1) * q2(3);
             z = q1(2) * q2(3)  - q1(3) * q2(2) + q1(4) * q2(1) + q1(1) * q2(4);
             s = -q1(2) * q2(2) - q1(3) * q2(3) - q1(4) * q2(4) + q1(1) * q2(1);
             q=[s,x,y,z];</remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="q1">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionProduct(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input interface to the quaternionProduct M-function.
             </summary>
             <remarks>
             M-Documentation:
             x = q1(2) * q2(1)  + q1(3) * q2(4) - q1(4) * q2(3) + q1(1) * q2(2);
             y = -q1(2) * q2(4) + q1(3) * q2(1) + q1(4) * q2(2) + q1(1) * q2(3);
             z = q1(2) * q2(3)  - q1(3) * q2(2) + q1(4) * q2(1) + q1(1) * q2(4);
             s = -q1(2) * q2(2) - q1(3) * q2(3) - q1(4) * q2(4) + q1(1) * q2(1);
             q=[s,x,y,z];</remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="q1">Input argument #1</param>
             <param name="q2">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionProduct(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the quaternionProduct function in which the input and
             output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             x = q1(2) * q2(1)  + q1(3) * q2(4) - q1(4) * q2(3) + q1(1) * q2(2);
             y = -q1(2) * q2(4) + q1(3) * q2(1) + q1(4) * q2(2) + q1(1) * q2(3);
             z = q1(2) * q2(3)  - q1(3) * q2(2) + q1(4) * q2(1) + q1(1) * q2(4);
             s = -q1(2) * q2(2) - q1(3) * q2(3) - q1(4) * q2(4) + q1(1) * q2(1);
             q=[s,x,y,z];</remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionQuTEMSampling">
             <summary>
             Provides a single output, 0-input interface to the quaternionQuTEMSampling
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             s1=s2=s3 =>uniform Sampling
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionQuTEMSampling(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the quaternionQuTEMSampling
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             s1=s2=s3 =>uniform Sampling
             </remarks>
             <param name="m">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionQuTEMSampling(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input interface to the quaternionQuTEMSampling
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             s1=s2=s3 =>uniform Sampling
             </remarks>
             <param name="m">Input argument #1</param>
             <param name="pg">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionQuTEMSampling(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 3-input interface to the quaternionQuTEMSampling
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             s1=s2=s3 =>uniform Sampling
             </remarks>
             <param name="m">Input argument #1</param>
             <param name="pg">Input argument #2</param>
             <param name="samples">Input argument #3</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionQuTEMSampling(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the quaternionQuTEMSampling
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             s1=s2=s3 =>uniform Sampling
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionQuTEMSampling(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the quaternionQuTEMSampling
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             s1=s2=s3 =>uniform Sampling
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="m">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionQuTEMSampling(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input interface to the quaternionQuTEMSampling
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             s1=s2=s3 =>uniform Sampling
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="m">Input argument #1</param>
             <param name="pg">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionQuTEMSampling(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 3-input interface to the quaternionQuTEMSampling
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             s1=s2=s3 =>uniform Sampling
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="m">Input argument #1</param>
             <param name="pg">Input argument #2</param>
             <param name="samples">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionQuTEMSampling(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the quaternionQuTEMSampling function in which the
             input and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             s1=s2=s3 =>uniform Sampling
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionRotation">
             <summary>
             Provides a single output, 0-input interface to the quaternionRotation
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             Create vector of quaternion point
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionRotation(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the quaternionRotation
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             Create vector of quaternion point
             </remarks>
             <param name="vector">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionRotation(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input interface to the quaternionRotation
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             Create vector of quaternion point
             </remarks>
             <param name="vector">Input argument #1</param>
             <param name="quaternion">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionRotation(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the quaternionRotation M-function.
             </summary>
             <remarks>
             M-Documentation:
             Create vector of quaternion point
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionRotation(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the quaternionRotation M-function.
             </summary>
             <remarks>
             M-Documentation:
             Create vector of quaternion point
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="vector">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionRotation(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input interface to the quaternionRotation M-function.
             </summary>
             <remarks>
             M-Documentation:
             Create vector of quaternion point
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="vector">Input argument #1</param>
             <param name="quaternion">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionRotation(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the quaternionRotation function in which the input
             and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             Create vector of quaternion point
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionUniformSampling">
             <summary>
             Provides a single output, 0-input interface to the quaternionUniformSampling
             M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionUniformSampling(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the quaternionUniformSampling
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="samples">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionUniformSampling(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the quaternionUniformSampling
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionUniformSampling(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the quaternionUniformSampling
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="samples">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.quaternionUniformSampling(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the quaternionUniformSampling function in which the
             input and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.remostrejar">
             <summary>
             Provides a single output, 0-input interface to the remostrejar M-function.
             </summary>
             <remarks>
             M-Documentation:
             r
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.remostrejar(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the remostrejar M-function.
             </summary>
             <remarks>
             M-Documentation:
             r
             </remarks>
             <param name="particles">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.remostrejar(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the remostrejar M-function.
             </summary>
             <remarks>
             M-Documentation:
             r
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.remostrejar(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the remostrejar M-function.
             </summary>
             <remarks>
             M-Documentation:
             r
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="particles">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.remostrejar(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the remostrejar function in which the input and
             output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             r
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.rotation2quaternion">
             <summary>
             Provides a single output, 0-input interface to the rotation2quaternion
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             theta should divide 2, because the negative quaternion it is the same
             rotation of the possitive quaternion.
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.rotation2quaternion(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the rotation2quaternion
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             theta should divide 2, because the negative quaternion it is the same
             rotation of the possitive quaternion.
             </remarks>
             <param name="theta">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.rotation2quaternion(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input interface to the rotation2quaternion
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             theta should divide 2, because the negative quaternion it is the same
             rotation of the possitive quaternion.
             </remarks>
             <param name="theta">Input argument #1</param>
             <param name="x">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.rotation2quaternion(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 3-input interface to the rotation2quaternion
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             theta should divide 2, because the negative quaternion it is the same
             rotation of the possitive quaternion.
             </remarks>
             <param name="theta">Input argument #1</param>
             <param name="x">Input argument #2</param>
             <param name="y">Input argument #3</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.rotation2quaternion(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 4-input interface to the rotation2quaternion
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             theta should divide 2, because the negative quaternion it is the same
             rotation of the possitive quaternion.
             </remarks>
             <param name="theta">Input argument #1</param>
             <param name="x">Input argument #2</param>
             <param name="y">Input argument #3</param>
             <param name="z">Input argument #4</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.rotation2quaternion(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the rotation2quaternion M-function.
             </summary>
             <remarks>
             M-Documentation:
             theta should divide 2, because the negative quaternion it is the same
             rotation of the possitive quaternion.
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.rotation2quaternion(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the rotation2quaternion M-function.
             </summary>
             <remarks>
             M-Documentation:
             theta should divide 2, because the negative quaternion it is the same
             rotation of the possitive quaternion.
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="theta">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.rotation2quaternion(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input interface to the rotation2quaternion M-function.
             </summary>
             <remarks>
             M-Documentation:
             theta should divide 2, because the negative quaternion it is the same
             rotation of the possitive quaternion.
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="theta">Input argument #1</param>
             <param name="x">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.rotation2quaternion(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 3-input interface to the rotation2quaternion M-function.
             </summary>
             <remarks>
             M-Documentation:
             theta should divide 2, because the negative quaternion it is the same
             rotation of the possitive quaternion.
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="theta">Input argument #1</param>
             <param name="x">Input argument #2</param>
             <param name="y">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.rotation2quaternion(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 4-input interface to the rotation2quaternion M-function.
             </summary>
             <remarks>
             M-Documentation:
             theta should divide 2, because the negative quaternion it is the same
             rotation of the possitive quaternion.
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="theta">Input argument #1</param>
             <param name="x">Input argument #2</param>
             <param name="y">Input argument #3</param>
             <param name="z">Input argument #4</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.rotation2quaternion(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the rotation2quaternion function in which the input
             and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             theta should divide 2, because the negative quaternion it is the same
             rotation of the possitive quaternion.
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.S_Touch">
             <summary>
             Provides a single output, 0-input interface to the S_Touch M-function.
             </summary>
             <remarks>
             M-Documentation:
             S: 
             S = [O1 O2 ... Ok]
             Ok.ptos: lista de puntos 
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.S_Touch(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the S_Touch M-function.
             </summary>
             <remarks>
             M-Documentation:
             S: 
             S = [O1 O2 ... Ok]
             Ok.ptos: lista de puntos 
             </remarks>
             <param name="chain">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.S_Touch(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input interface to the S_Touch M-function.
             </summary>
             <remarks>
             M-Documentation:
             S: 
             S = [O1 O2 ... Ok]
             Ok.ptos: lista de puntos 
             </remarks>
             <param name="chain">Input argument #1</param>
             <param name="S">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.S_Touch(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the S_Touch M-function.
             </summary>
             <remarks>
             M-Documentation:
             S: 
             S = [O1 O2 ... Ok]
             Ok.ptos: lista de puntos 
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.S_Touch(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the S_Touch M-function.
             </summary>
             <remarks>
             M-Documentation:
             S: 
             S = [O1 O2 ... Ok]
             Ok.ptos: lista de puntos 
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="chain">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.S_Touch(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input interface to the S_Touch M-function.
             </summary>
             <remarks>
             M-Documentation:
             S: 
             S = [O1 O2 ... Ok]
             Ok.ptos: lista de puntos 
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="chain">Input argument #1</param>
             <param name="S">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.S_Touch(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the S_Touch function in which the input and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             S: 
             S = [O1 O2 ... Ok]
             Ok.ptos: lista de puntos 
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.setGaussianParameters">
             <summary>
             Provides a single output, 0-input interface to the setGaussianParameters
             M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.setGaussianParameters(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the setGaussianParameters
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="media_gausiana">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.setGaussianParameters(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input interface to the setGaussianParameters
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="media_gausiana">Input argument #1</param>
             <param name="rotar_en_x">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.setGaussianParameters(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 3-input interface to the setGaussianParameters
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="media_gausiana">Input argument #1</param>
             <param name="rotar_en_x">Input argument #2</param>
             <param name="rotar_en_y">Input argument #3</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.setGaussianParameters(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 4-input interface to the setGaussianParameters
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="media_gausiana">Input argument #1</param>
             <param name="rotar_en_x">Input argument #2</param>
             <param name="rotar_en_y">Input argument #3</param>
             <param name="rotar_en_z">Input argument #4</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.setGaussianParameters(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the setGaussianParameters
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.setGaussianParameters(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the setGaussianParameters
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="media_gausiana">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.setGaussianParameters(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input interface to the setGaussianParameters
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="media_gausiana">Input argument #1</param>
             <param name="rotar_en_x">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.setGaussianParameters(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 3-input interface to the setGaussianParameters
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="media_gausiana">Input argument #1</param>
             <param name="rotar_en_x">Input argument #2</param>
             <param name="rotar_en_y">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.setGaussianParameters(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 4-input interface to the setGaussianParameters
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="media_gausiana">Input argument #1</param>
             <param name="rotar_en_x">Input argument #2</param>
             <param name="rotar_en_y">Input argument #3</param>
             <param name="rotar_en_z">Input argument #4</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.setGaussianParameters(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the setGaussianParameters function in which the input
             and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.slerp">
             <summary>
             Provides a single output, 0-input interface to the slerp M-function.
             </summary>
             <remarks>
             M-Documentation:
             the quaternions are pointing in opposite direction, so use the
             equivalent alternative representation
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.slerp(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the slerp M-function.
             </summary>
             <remarks>
             M-Documentation:
             the quaternions are pointing in opposite direction, so use the
             equivalent alternative representation
             </remarks>
             <param name="qOrigin">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.slerp(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input interface to the slerp M-function.
             </summary>
             <remarks>
             M-Documentation:
             the quaternions are pointing in opposite direction, so use the
             equivalent alternative representation
             </remarks>
             <param name="qOrigin">Input argument #1</param>
             <param name="qDestination">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.slerp(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 3-input interface to the slerp M-function.
             </summary>
             <remarks>
             M-Documentation:
             the quaternions are pointing in opposite direction, so use the
             equivalent alternative representation
             </remarks>
             <param name="qOrigin">Input argument #1</param>
             <param name="qDestination">Input argument #2</param>
             <param name="f">Input argument #3</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.slerp(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 4-input interface to the slerp M-function.
             </summary>
             <remarks>
             M-Documentation:
             the quaternions are pointing in opposite direction, so use the
             equivalent alternative representation
             </remarks>
             <param name="qOrigin">Input argument #1</param>
             <param name="qDestination">Input argument #2</param>
             <param name="f">Input argument #3</param>
             <param name="epsilon">Input argument #4</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.slerp(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the slerp M-function.
             </summary>
             <remarks>
             M-Documentation:
             the quaternions are pointing in opposite direction, so use the
             equivalent alternative representation
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.slerp(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the slerp M-function.
             </summary>
             <remarks>
             M-Documentation:
             the quaternions are pointing in opposite direction, so use the
             equivalent alternative representation
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="qOrigin">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.slerp(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input interface to the slerp M-function.
             </summary>
             <remarks>
             M-Documentation:
             the quaternions are pointing in opposite direction, so use the
             equivalent alternative representation
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="qOrigin">Input argument #1</param>
             <param name="qDestination">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.slerp(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 3-input interface to the slerp M-function.
             </summary>
             <remarks>
             M-Documentation:
             the quaternions are pointing in opposite direction, so use the
             equivalent alternative representation
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="qOrigin">Input argument #1</param>
             <param name="qDestination">Input argument #2</param>
             <param name="f">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.slerp(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 4-input interface to the slerp M-function.
             </summary>
             <remarks>
             M-Documentation:
             the quaternions are pointing in opposite direction, so use the
             equivalent alternative representation
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="qOrigin">Input argument #1</param>
             <param name="qDestination">Input argument #2</param>
             <param name="f">Input argument #3</param>
             <param name="epsilon">Input argument #4</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.slerp(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the slerp function in which the input and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             the quaternions are pointing in opposite direction, so use the
             equivalent alternative representation
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.testQuTEM">
             <summary>
             Provides a void output, 0-input interface to the testQuTEM M-function.
             </summary>
             <remarks>
             M-Documentation:
             p=quaternionUniformSampling(samples);
             for i = 1:samples
             p(i,:)=quaternionNormalize(p(i,:));
             end
             </remarks>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.testQuTEM(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a void output, 1-input interface to the testQuTEM M-function.
             </summary>
             <remarks>
             M-Documentation:
             p=quaternionUniformSampling(samples);
             for i = 1:samples
             p(i,:)=quaternionNormalize(p(i,:));
             end
             </remarks>
             <param name="m">Input argument #1</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.testQuTEM(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a void output, 2-input interface to the testQuTEM M-function.
             </summary>
             <remarks>
             M-Documentation:
             p=quaternionUniformSampling(samples);
             for i = 1:samples
             p(i,:)=quaternionNormalize(p(i,:));
             end
             </remarks>
             <param name="m">Input argument #1</param>
             <param name="s">Input argument #2</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.testQuTEM(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a void output, 3-input interface to the testQuTEM M-function.
             </summary>
             <remarks>
             M-Documentation:
             p=quaternionUniformSampling(samples);
             for i = 1:samples
             p(i,:)=quaternionNormalize(p(i,:));
             end
             </remarks>
             <param name="m">Input argument #1</param>
             <param name="s">Input argument #2</param>
             <param name="s1">Input argument #3</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.testQuTEM(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a void output, 4-input interface to the testQuTEM M-function.
             </summary>
             <remarks>
             M-Documentation:
             p=quaternionUniformSampling(samples);
             for i = 1:samples
             p(i,:)=quaternionNormalize(p(i,:));
             end
             </remarks>
             <param name="m">Input argument #1</param>
             <param name="s">Input argument #2</param>
             <param name="s1">Input argument #3</param>
             <param name="s2">Input argument #4</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.testQuTEM(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a void output, 5-input interface to the testQuTEM M-function.
             </summary>
             <remarks>
             M-Documentation:
             p=quaternionUniformSampling(samples);
             for i = 1:samples
             p(i,:)=quaternionNormalize(p(i,:));
             end
             </remarks>
             <param name="m">Input argument #1</param>
             <param name="s">Input argument #2</param>
             <param name="s1">Input argument #3</param>
             <param name="s2">Input argument #4</param>
             <param name="s3">Input argument #5</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.testQuTEM(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a void output, 6-input interface to the testQuTEM M-function.
             </summary>
             <remarks>
             M-Documentation:
             p=quaternionUniformSampling(samples);
             for i = 1:samples
             p(i,:)=quaternionNormalize(p(i,:));
             end
             </remarks>
             <param name="m">Input argument #1</param>
             <param name="s">Input argument #2</param>
             <param name="s1">Input argument #3</param>
             <param name="s2">Input argument #4</param>
             <param name="s3">Input argument #5</param>
             <param name="samples">Input argument #6</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.testQuTEM(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the testQuTEM M-function.
             </summary>
             <remarks>
             M-Documentation:
             p=quaternionUniformSampling(samples);
             for i = 1:samples
             p(i,:)=quaternionNormalize(p(i,:));
             end
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.testQuTEM(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the testQuTEM M-function.
             </summary>
             <remarks>
             M-Documentation:
             p=quaternionUniformSampling(samples);
             for i = 1:samples
             p(i,:)=quaternionNormalize(p(i,:));
             end
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="m">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.testQuTEM(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input interface to the testQuTEM M-function.
             </summary>
             <remarks>
             M-Documentation:
             p=quaternionUniformSampling(samples);
             for i = 1:samples
             p(i,:)=quaternionNormalize(p(i,:));
             end
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="m">Input argument #1</param>
             <param name="s">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.testQuTEM(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 3-input interface to the testQuTEM M-function.
             </summary>
             <remarks>
             M-Documentation:
             p=quaternionUniformSampling(samples);
             for i = 1:samples
             p(i,:)=quaternionNormalize(p(i,:));
             end
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="m">Input argument #1</param>
             <param name="s">Input argument #2</param>
             <param name="s1">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.testQuTEM(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 4-input interface to the testQuTEM M-function.
             </summary>
             <remarks>
             M-Documentation:
             p=quaternionUniformSampling(samples);
             for i = 1:samples
             p(i,:)=quaternionNormalize(p(i,:));
             end
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="m">Input argument #1</param>
             <param name="s">Input argument #2</param>
             <param name="s1">Input argument #3</param>
             <param name="s2">Input argument #4</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.testQuTEM(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 5-input interface to the testQuTEM M-function.
             </summary>
             <remarks>
             M-Documentation:
             p=quaternionUniformSampling(samples);
             for i = 1:samples
             p(i,:)=quaternionNormalize(p(i,:));
             end
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="m">Input argument #1</param>
             <param name="s">Input argument #2</param>
             <param name="s1">Input argument #3</param>
             <param name="s2">Input argument #4</param>
             <param name="s3">Input argument #5</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.testQuTEM(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 6-input interface to the testQuTEM M-function.
             </summary>
             <remarks>
             M-Documentation:
             p=quaternionUniformSampling(samples);
             for i = 1:samples
             p(i,:)=quaternionNormalize(p(i,:));
             end
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="m">Input argument #1</param>
             <param name="s">Input argument #2</param>
             <param name="s1">Input argument #3</param>
             <param name="s2">Input argument #4</param>
             <param name="s3">Input argument #5</param>
             <param name="samples">Input argument #6</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.vectors2quaternion">
             <summary>
             Provides a single output, 0-input interface to the vectors2quaternion
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             s = sin(angle/2);
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.vectors2quaternion(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input interface to the vectors2quaternion
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             s = sin(angle/2);
             </remarks>
             <param name="v1">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.vectors2quaternion(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input interface to the vectors2quaternion
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             s = sin(angle/2);
             </remarks>
             <param name="v1">Input argument #1</param>
             <param name="v2">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.vectors2quaternion(System.Int32)">
             <summary>
             Provides the standard 0-input interface to the vectors2quaternion M-function.
             </summary>
             <remarks>
             M-Documentation:
             s = sin(angle/2);
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.vectors2quaternion(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input interface to the vectors2quaternion M-function.
             </summary>
             <remarks>
             M-Documentation:
             s = sin(angle/2);
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="v1">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.vectors2quaternion(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input interface to the vectors2quaternion M-function.
             </summary>
             <remarks>
             M-Documentation:
             s = sin(angle/2);
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="v1">Input argument #1</param>
             <param name="v2">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.vectors2quaternion(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the vectors2quaternion function in which the input
             and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             s = sin(angle/2);
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:IK_PF_NET.IK_PF_NETclass.WaitForFiguresToDie">
             <summary>
             This method will cause a MATLAB figure window to behave as a modal dialog box.
             The method will not return until all the figure windows associated with this
             component have been closed.
             </summary>
             <remarks>
             An application should only call this method when required to keep the
             MATLAB figure window from disappearing.  Other techniques, such as calling
             Console.ReadLine() from the application should be considered where
             possible.</remarks>
            
        </member>
        <member name="T:IK_PF_NET.MCRComponentState">
            <summary>
            The MCR Component State
            </summary>
        </member>
        <member name="F:IK_PF_NET.MCRComponentState.MCC_IK_PF_NET_name_data">
            <summary>
            The .NET Builder component name
            </summary>
        </member>
        <member name="F:IK_PF_NET.MCRComponentState.MCC_IK_PF_NET_root_data">
            <summary>
            The component root data
            </summary>
        </member>
        <member name="F:IK_PF_NET.MCRComponentState.MCC_IK_PF_NET_public_data">
            <summary>
            The public encryption key for the .NET Builder component
            </summary>
        </member>
        <member name="F:IK_PF_NET.MCRComponentState.MCC_IK_PF_NET_session_data">
            <summary>
            The session encryption key for the .NET Builder component
            </summary>
        </member>
        <member name="F:IK_PF_NET.MCRComponentState.MCC_IK_PF_NET_matlabpath_data">
            <summary>
            The MATLAB path for the .NET Builder component
            </summary>
        </member>
        <member name="F:IK_PF_NET.MCRComponentState.MCC_IK_PF_NET_matlabpath_data_count">
            <summary>
            The MATLAB path count
            </summary>
        </member>
        <member name="F:IK_PF_NET.MCRComponentState.MCC_IK_PF_NET_classpath_data">
            <summary>
            The class path for the .NET Builder component
            </summary>
        </member>
        <member name="F:IK_PF_NET.MCRComponentState.MCC_IK_PF_NET_classpath_data_count">
            <summary>
            The class path count
            </summary>
        </member>
        <member name="F:IK_PF_NET.MCRComponentState.MCC_IK_PF_NET_libpath_data">
            <summary>
            The lib path for the .NET Builder component
            </summary>
        </member>
        <member name="F:IK_PF_NET.MCRComponentState.MCC_IK_PF_NET_libpath_data_count">
            <summary>
            The lib path count
            </summary>
        </member>
        <member name="F:IK_PF_NET.MCRComponentState.MCC_IK_PF_NET_mcr_application_options">
            <summary>
            The MCR application options
            </summary>
        </member>
        <member name="F:IK_PF_NET.MCRComponentState.MCC_IK_PF_NET_mcr_application_option_count">
            <summary>
            The MCR application options count
            </summary>
        </member>
        <member name="F:IK_PF_NET.MCRComponentState.MCC_IK_PF_NET_mcr_runtime_options">
            <summary>
            The MCR runtime options
            </summary>
        </member>
        <member name="F:IK_PF_NET.MCRComponentState.MCC_IK_PF_NET_mcr_runtime_option_count">
            <summary>
            The MCR runtime options count
            </summary>
        </member>
        <member name="F:IK_PF_NET.MCRComponentState.MCC_IK_PF_NET_mcr_pref_dir">
            <summary>
            The component preferences directory
            </summary>
        </member>
        <member name="F:IK_PF_NET.MCRComponentState.MCC_IK_PF_NET_set_warning_state">
            <summary>
            Runtime warning states
            </summary>
        </member>
        <member name="F:IK_PF_NET.MCRComponentState.MCC_IK_PF_NET_set_warning_state_count">
            <summary>
            Runtime warning state count
            </summary>
        </member>
    </members>
</doc>
